{"ast":null,"code":"var _jsxFileName = \"/home/mnck/MNCK/Programmes/Semestre5/DevAppN-T/appli_codes/sb-car-13/carfront/src/components/Carlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { SERVER_URL } from \"../constants.js\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport Button from \"@mui/material/Button\";\nimport AddCar from \"./AddCar.js\";\nimport EditCar from './EditCar.js';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CarList() {\n  _s();\n  const [cars, setCars] = useState([]);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    fetchCars();\n  }, []);\n  const fetchCars = () => {\n    fetch(SERVER_URL + \"api/cars\").then(response => response.json()).then(data => setCars(data._embedded.cars)).catch(err => console.error(err));\n  };\n  const addCar = car => {\n    fetch(SERVER_URL + \"api/cars\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(car)\n    }).then(response => {\n      if (response.ok) {\n        fetchCars();\n      } else {\n        alert(\"Something went wrong !!\");\n      }\n    }).catch(err => console.error(err));\n  };\n  const updateCar = (car, link) => {\n    fetch(link, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(car)\n    }).then(response => {\n      if (response.ok) {\n        fetchCars();\n      } else {\n        alert(\"Something went wrong !!\");\n      }\n    }).catch(err => console.error(err));\n  };\n  const onDelClick = url => {\n    if (window.confirm(\"Are you sure to delete ?\")) {\n      fetch(url, {\n        method: \"DELETE\"\n      }).then(response => {\n        if (response.ok) {\n          fetchCars();\n          setOpen(true);\n        } else {\n          alert(\"Some thing is wrong !!!!\");\n        }\n      }).catch(Err => console.error(Err));\n    }\n  };\n  const columns = [{\n    field: \"brand\",\n    headerName: \"Marque\",\n    width: 200\n  }, {\n    field: \"model\",\n    headerName: \"Modèle\",\n    width: 200\n  }, {\n    field: \"color\",\n    headerName: \"Couleur\",\n    width: 200\n  }, {\n    field: \"year\",\n    headerName: \"Année\",\n    width: 150\n  }, {\n    field: \"price\",\n    headerName: \"Prix\",\n    width: 150\n  }, {\n    field: \"_links.car.href\",\n    headerName: \"\",\n    sortable: false,\n    filterable: false,\n    renderCell: row => /*#__PURE__*/_jsxDEV(EditCar, {\n      data: row,\n      updateCar: updateCar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 26\n    }, this)\n  }, {\n    field: \"_links.self.href\",\n    headerName: \"\",\n    sortable: false,\n    filterable: false,\n    renderCell: row => /*#__PURE__*/_jsxDEV(Stack, {\n      mt: 2,\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        onClick: () => onDelClick(row.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      mt: 2,\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(AddCar, {\n        addCar: addCar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 500,\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: cars,\n        disableRowSelectionOnClick: true,\n        columns: columns,\n        getRowId: row => row._links.self.href\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: open,\n        autoHideDuration: 2000,\n        onClose: () => setOpen(false),\n        message: \"voiture suprimee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(CarList, \"OH+7Whk0tvwXHwlcQTvKJAJQ8rs=\");\n_c = CarList;\nexport default CarList;\n\n// <table>\n//   <tbody>\n//     {cars.map((car, index) => (\n//       <tr key={index}>\n//         <td>{car.brand}</td>\n//         <td>{car.model}</td>\n//         <td>{car.color}</td>\n//         <td>{car.year}</td>\n//         <td>{car.price}</td>\n//       </tr>\n//     ))}\n//   </tbody>\n// </table>;\nvar _c;\n$RefreshReg$(_c, \"CarList\");","map":{"version":3,"names":["React","useEffect","useState","Snackbar","SERVER_URL","DataGrid","Button","AddCar","EditCar","Stack","jsxDEV","_jsxDEV","CarList","_s","cars","setCars","open","setOpen","fetchCars","fetch","then","response","json","data","_embedded","catch","err","console","error","addCar","car","method","headers","body","JSON","stringify","ok","alert","updateCar","link","onDelClick","url","window","confirm","Err","columns","field","headerName","width","sortable","filterable","renderCell","row","fileName","_jsxFileName","lineNumber","columnNumber","mt","mb","children","variant","color","onClick","id","Fragment","style","height","rows","disableRowSelectionOnClick","getRowId","_links","self","href","autoHideDuration","onClose","message","_c","$RefreshReg$"],"sources":["/home/mnck/MNCK/Programmes/Semestre5/DevAppN-T/appli_codes/sb-car-13/carfront/src/components/Carlist.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { SERVER_URL } from \"../constants.js\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport Button from \"@mui/material/Button\";\nimport AddCar from \"./AddCar.js\";\nimport EditCar from './EditCar.js';\nimport Stack from '@mui/material/Stack';\n\nfunction CarList() {\n  const [cars, setCars] = useState([]);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    fetchCars();\n  }, []);\n\n  const fetchCars = () => {\n    fetch(SERVER_URL + \"api/cars\")\n      .then((response) => response.json())\n      .then((data) => setCars(data._embedded.cars))\n      .catch((err) => console.error(err));\n  };\n\n  const addCar = car => {\n    fetch(SERVER_URL + \"api/cars\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(car),\n    }).then((response) => {\n      if (response.ok) {\n        fetchCars();\n      } else {\n        alert(\"Something went wrong !!\");\n      }\n    }).catch(err => console.error(err));\n  };\n\n  const updateCar = (car, link) => {\n    fetch(link, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(car),\n    }).then((response) => {\n      if (response.ok) {\n        fetchCars();\n      } else {\n        alert(\"Something went wrong !!\");\n      }\n    }).catch(err => console.error(err));\n  };\n\n  const onDelClick = url => {\n    if (window.confirm(\"Are you sure to delete ?\")) {\n      fetch(url, { method: \"DELETE\" })\n        .then((response) => {\n          if (response.ok) {\n            fetchCars();\n            setOpen(true);\n          } else {\n            alert(\"Some thing is wrong !!!!\");\n          }\n        })\n        .catch((Err) => console.error(Err));\n    }\n  };\n  const columns = [\n    { field: \"brand\", headerName: \"Marque\", width: 200 },\n    { field: \"model\", headerName: \"Modèle\", width: 200 },\n    { field: \"color\", headerName: \"Couleur\", width: 200 },\n    { field: \"year\", headerName: \"Année\", width: 150 },\n    { field: \"price\", headerName: \"Prix\", width: 150 },\n    {\n      field: \"_links.car.href\",\n      headerName: \"\",\n      sortable: false,\n      filterable: false,\n      renderCell: row => <EditCar data={row} updateCar={updateCar}/>\n    },\n    {\n      field: \"_links.self.href\",\n      headerName: \"\",\n      sortable: false,\n      filterable: false,\n      renderCell: (row) => (\n        <Stack mt={2} mb={2}><Button variant=\"contained\" color=\"error\" onClick={() => onDelClick(row.id)}>Delete</Button></Stack>\n      ),\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <Stack mt={2} mb={2}>\n        <AddCar addCar={addCar}/>\n      </Stack>\n      <div style={{ height: 500, width: \"100%\" }}>\n        <DataGrid\n          rows={cars}\n          disableRowSelectionOnClick={true}\n          columns={columns}\n          getRowId={(row) => row._links.self.href}\n        />\n        <Snackbar\n          open={open}\n          autoHideDuration={2000}\n          onClose={() => setOpen(false)}\n          message=\"voiture suprimee\"\n        />\n      </div>\n    </React.Fragment>\n  );\n}\nexport default CarList;\n\n// <table>\n//   <tbody>\n//     {cars.map((car, index) => (\n//       <tr key={index}>\n//         <td>{car.brand}</td>\n//         <td>{car.model}</td>\n//         <td>{car.color}</td>\n//         <td>{car.year}</td>\n//         <td>{car.price}</td>\n//       </tr>\n//     ))}\n//   </tbody>\n// </table>;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}