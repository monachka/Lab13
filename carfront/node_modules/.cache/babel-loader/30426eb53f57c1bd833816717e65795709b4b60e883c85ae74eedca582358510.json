{"ast":null,"code":"var _jsxFileName = \"/home/mnck/MNCK/Programmes/Semestre5/DevAppN-T/appli_codes/sb-car-13/carfront/src/components/Ownerlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n//import Snackbar from \"@mui/material/Snackbar\";\nimport { SERVER_URL } from \"../constants.js\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n//import Button from \"@mui/material/Button\";\n// import AddCar from \"./AddCar.js\";\n// import EditCar from './EditCar.js';\n// import Stack from '@mui/material/Stack';\n// import IconButton from '@mui/material/IconButton';\n// import DeleteIcon from '@mui/icons-material/Delete';\n//import logo from '../logo.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OwnerList() {\n  _s();\n  const [owners, setOwners] = useState([]);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    fetchOwners();\n  }, []);\n  const fetchOwners = () => {\n    fetch(SERVER_URL + \"api/owners\").then(response => response.json()).then(data => setCars(data._embedded.owners)).catch(err => console.error(err));\n  };\n\n  //   const addCar = car => {\n  //     fetch(SERVER_URL + \"api/cars\", {\n  //       method: \"POST\",\n  //       headers: { \"Content-Type\": \"application/json\" },\n  //       body: JSON.stringify(car),\n  //     }).then((response) => {\n  //       if (response.ok) {\n  //         fetchCars();\n  //       } else {\n  //         alert(\"Something went wrong !!\");\n  //       }\n  //     }).catch(err => console.error(err));\n  //   };\n\n  //   const updateCar = (car, link) => {\n  //     fetch(link, {\n  //       method: \"PUT\",\n  //       headers: { \"Content-Type\": \"application/json\" },\n  //       body: JSON.stringify(car),\n  //     }).then((response) => {\n  //       if (response.ok) {\n  //         fetchCars();\n  //       } else {\n  //         alert(\"Something went wrong !!\");\n  //       }\n  //     }).catch(err => console.error(err));\n  //   };\n\n  //   const onDelClick = url => {\n  //     if (window.confirm(\"Are you sure to delete ?\")) {\n  //       fetch(url, { method: \"DELETE\" })\n  //         .then((response) => {\n  //           if (response.ok) {\n  //             fetchCars();\n  //             setOpen(true);\n  //           } else {\n  //             alert(\"Some thing is wrong !!!!\");\n  //           }\n  //         })\n  //         .catch((Err) => console.error(Err));\n  //     }\n  //   };\n  const columns = [{\n    field: \"firstname\",\n    headerName: \"Prenom\",\n    width: 200\n  }, {\n    field: \"lastname\",\n    headerName: \"Nom\",\n    width: 200\n  }\n  // {\n  //   field: \"_links.car.href\",\n  //   headerName: \"\",\n  //   sortable: false,\n  //   filterable: false,\n  //   renderCell: row => <EditCar data={row} updateCar={updateCar}/>\n  // },\n  // {\n  //   field: \"_links.self.href\",\n  //   headerName: \"\",\n  //   sortable: false,\n  //   filterable: false,\n  //   renderCell: (row) => (\n  //     <IconButton variant=\"contained\" color=\"error\" size=\"small\" onClick={() => onDelClick(row.id)}><DeleteIcon color=\"error\"/></IconButton>\n  //   ),\n  // },\n  ];\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 500,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: owners,\n        disableRowSelectionOnClick: true,\n        columns: columns,\n        getRowId: row => row._links.self.href\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(OwnerList, \"JnHUvUCJ1Q3GcXPjhShVousJ4lM=\");\n_c = OwnerList;\nexport default OwnerList;\n\n// <table>\n//   <tbody>\n//     {cars.map((car, index) => (\n//       <tr key={index}>\n//         <td>{car.brand}</td>\n//         <td>{car.model}</td>\n//         <td>{car.color}</td>\n//         <td>{car.year}</td>\n//         <td>{car.price}</td>\n//       </tr>\n//     ))}\n//   </tbody>\n// </table>;\nvar _c;\n$RefreshReg$(_c, \"OwnerList\");","map":{"version":3,"names":["React","useEffect","useState","SERVER_URL","DataGrid","jsxDEV","_jsxDEV","OwnerList","_s","owners","setOwners","open","setOpen","fetchOwners","fetch","then","response","json","data","setCars","_embedded","catch","err","console","error","columns","field","headerName","width","Fragment","children","style","height","rows","disableRowSelectionOnClick","getRowId","row","_links","self","href","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mnck/MNCK/Programmes/Semestre5/DevAppN-T/appli_codes/sb-car-13/carfront/src/components/Ownerlist.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n//import Snackbar from \"@mui/material/Snackbar\";\nimport { SERVER_URL } from \"../constants.js\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n//import Button from \"@mui/material/Button\";\n// import AddCar from \"./AddCar.js\";\n// import EditCar from './EditCar.js';\n// import Stack from '@mui/material/Stack';\n// import IconButton from '@mui/material/IconButton';\n// import DeleteIcon from '@mui/icons-material/Delete';\n//import logo from '../logo.svg';\n\nfunction OwnerList() {\n  const [owners, setOwners] = useState([]);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    fetchOwners();\n  }, []);\n\n  const fetchOwners = () => {\n    fetch(SERVER_URL + \"api/owners\")\n      .then((response) => response.json())\n      .then((data) => setCars(data._embedded.owners))\n      .catch((err) => console.error(err));\n  };\n\n//   const addCar = car => {\n//     fetch(SERVER_URL + \"api/cars\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(car),\n//     }).then((response) => {\n//       if (response.ok) {\n//         fetchCars();\n//       } else {\n//         alert(\"Something went wrong !!\");\n//       }\n//     }).catch(err => console.error(err));\n//   };\n\n//   const updateCar = (car, link) => {\n//     fetch(link, {\n//       method: \"PUT\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(car),\n//     }).then((response) => {\n//       if (response.ok) {\n//         fetchCars();\n//       } else {\n//         alert(\"Something went wrong !!\");\n//       }\n//     }).catch(err => console.error(err));\n//   };\n\n//   const onDelClick = url => {\n//     if (window.confirm(\"Are you sure to delete ?\")) {\n//       fetch(url, { method: \"DELETE\" })\n//         .then((response) => {\n//           if (response.ok) {\n//             fetchCars();\n//             setOpen(true);\n//           } else {\n//             alert(\"Some thing is wrong !!!!\");\n//           }\n//         })\n//         .catch((Err) => console.error(Err));\n//     }\n//   };\n  const columns = [\n    { field: \"firstname\", headerName: \"Prenom\", width: 200 },\n    { field: \"lastname\", headerName: \"Nom\", width: 200 },\n    // {\n    //   field: \"_links.car.href\",\n    //   headerName: \"\",\n    //   sortable: false,\n    //   filterable: false,\n    //   renderCell: row => <EditCar data={row} updateCar={updateCar}/>\n    // },\n    // {\n    //   field: \"_links.self.href\",\n    //   headerName: \"\",\n    //   sortable: false,\n    //   filterable: false,\n    //   renderCell: (row) => (\n    //     <IconButton variant=\"contained\" color=\"error\" size=\"small\" onClick={() => onDelClick(row.id)}><DeleteIcon color=\"error\"/></IconButton>\n    //   ),\n    // },\n  ];\n\n  return (\n    <React.Fragment>\n      {/* <Stack mt={2} mb={2}>\n        <AddCar addCar={addCar}/>\n      </Stack> */}\n      <div style={{ height: 500, width: \"100%\" }}>\n        <DataGrid\n          rows={owners}\n          disableRowSelectionOnClick={true}\n          columns={columns}\n          getRowId={(row) => row._links.self.href}\n        />\n        {/* <Snackbar\n          open={open}\n          autoHideDuration={2000}\n          onClose={() => setOpen(false)}\n          message=\"voiture suprimee\"\n        /> */}\n      </div>\n    </React.Fragment>\n  );\n}\nexport default OwnerList;\n\n// <table>\n//   <tbody>\n//     {cars.map((car, index) => (\n//       <tr key={index}>\n//         <td>{car.brand}</td>\n//         <td>{car.model}</td>\n//         <td>{car.color}</td>\n//         <td>{car.year}</td>\n//         <td>{car.price}</td>\n//       </tr>\n//     ))}\n//   </tbody>\n// </table>;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvCD,SAAS,CAAC,MAAM;IACdY,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACxBC,KAAK,CAACX,UAAU,GAAG,YAAY,CAAC,CAC7BY,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKC,OAAO,CAACD,IAAI,CAACE,SAAS,CAACX,MAAM,CAAC,CAAC,CAC9CY,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC;;EAEH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACE,MAAMG,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,WAAW;IAAEC,UAAU,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAI,CAAC,EACxD;IAAEF,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAI;EACnD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA,CACD;;EAED,oBACEtB,OAAA,CAACN,KAAK,CAAC6B,QAAQ;IAAAC,QAAA,eAIbxB,OAAA;MAAKyB,KAAK,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEJ,KAAK,EAAE;MAAO,CAAE;MAAAE,QAAA,eACzCxB,OAAA,CAACF,QAAQ;QACP6B,IAAI,EAAExB,MAAO;QACbyB,0BAA0B,EAAE,IAAK;QACjCT,OAAO,EAAEA,OAAQ;QACjBU,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAACC,MAAM,CAACC,IAAI,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB;AAACnC,EAAA,CAlGQD,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AAmGlB,eAAeA,SAAS;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}